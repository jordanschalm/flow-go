name: CI

on:
  push:
    branches:
      - 'auto-cadence-upgrade/**'
      - staging
      - trying
      - 'feature/**'
      - 'v[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master*
      - 'auto-cadence-upgrade/**'
      - 'feature/**'
      - 'v[0-9]+.[0-9]+'
  merge_group:
    branches:
      - master

env:
  GO_VERSION: "1.23"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build-linter:
    runs-on: ubuntu-latest
    env:
      GO_VERSION: "1.23"
    steps:

      - name: Cache custom linter binary
        id: cache-linter
        uses: actions/cache@v3
        with:
          # key should change whenever your linter code or Go version changes
          key: custom-linter-${{ env.GO_VERSION }}-${{ runner.os }}-${{ hashFiles('.custom-gcl.yml', 'tools/structwrite/**') }}
          path: tools/custom-gcl
          lookup-only: 'true'

      - name: Check out code
        if: steps.cache-linter.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
      - name: Set up Go
        if: steps.cache-linter.outputs.cache-hit != 'true'
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Install golangci-lint
        if: steps.cache-linter.outputs.cache-hit != 'true'
        uses: golangci/golangci-lint-action@v6
        continue-on-error: true
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.63
          args: "--no-config --disable-all"
      - name: Build custom linter
        if: steps.cache-linter.outputs.cache-hit != 'true'
        run: |
          golangci-lint custom

  lint:
    name: Lint
    needs: build-linter
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        dir: [ ./, ./integration/, ./insecure/ ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          
      - name: Restore custom linter binary from cache
        id: cache-linter
        uses: actions/cache@v3
        with:
          # key should change whenever your linter code or Go version changes
          key: custom-linter-${{ env.GO_VERSION }}-${{ runner.os }}-${{ hashFiles('.custom-gcl.yml', 'tools/structwrite/**') }}
          path: tools/custom-gcl
          # We are using the cache to share data between the build-linter job and the 3 lint jobs
          # If there is a cache miss, it likely means either the build-linter job failed or the cache entry was evicted
          # We expect this to happen very infrequently
          fail-on-cache-miss: 'true'


      - name: Run go generate
        run: go generate ./...
        working-directory: ${{ matrix.dir }}

      # must have expected binary name for use in default gcl action
      - name: Rename custom linter binary to canonical
        run: mv ./tools/custom-gcl ./tools/golangci-lint
      - name: Make lint binary executable
        run: chmod +x ./tools/golangci-lint
      - name: Add lint binary to path
        run: echo "$(pwd)/tools" >> $GITHUB_PATH

      - name: DEBUG print tools
        run: ls tools/*
      - name: DEBUG print path
        run: echo "$PATH --- $(pwd)"
      - name: DEBUG which
        run: which golangci-lint
      - name: DEBUG lint run test
        run: golangci-lint version

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          install-mode: 'none' # looks for binary in path rather than downloading
          args: "-v"
          working-directory: ${{ matrix.dir }}
